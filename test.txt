TestBase--->
package Base;

import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.time.Duration;
import java.util.Properties;

import org.apache.poi.ss.usermodel.Sheet;
import org.apache.poi.ss.usermodel.WorkbookFactory;
import org.openqa.selenium.OutputType;
import org.openqa.selenium.TakesScreenshot;
import org.openqa.selenium.WebDriver; 
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.edge.EdgeDriver;
import org.openqa.selenium.firefox.FirefoxDriver;
import org.openqa.selenium.io.FileHandler;

import io.github.bonigarcia.wdm.WebDriverManager;

public class TestBase {
	
	public static WebDriver driver;
	
	public void initalization() throws Exception
	{
		if(readPropertyFile("browser").equals("chrome"))
		{
		WebDriverManager.chromedriver().setup();		
		driver = new ChromeDriver();
	}
	else if (readPropertyFile("browser").equals("firefox")) 
	{
		WebDriverManager.firefoxdriver().setup();
		driver = new FirefoxDriver();
	}
	
	else if (readPropertyFile("browser").equals("edge")) 
	{
		WebDriverManager.edgedriver().setup();
		driver = new EdgeDriver();
	}
	
	
		
		driver.manage().window().maximize();
//		driver.get("https://kite.zerodha.com");
//		driver.get(readPropertyFile("url"));
		driver.get(readExcelFile(0,0));
		driver.manage().timeouts().implicitlyWait(Duration.ofSeconds(20));
	}
	
	
	public String readExcelFile(int row,int col) throws Exception
	{
		FileInputStream file = new FileInputStream("C:\\Users\\IT'S ME\\eclipse-Welcomeee\\Frame30\\TestData\\Framework Excel.xlsx");
	    Sheet abc = WorkbookFactory.create(file).getSheet("Sheet1");
	    String xyz = abc.getRow(row).getCell(col).getStringCellValue();
	    return xyz;
	
	}
	
	public String readPropertyFile(String value) throws Exception
	{
		Properties prop = new Properties();
		FileInputStream file = new FileInputStream("C:\\Users\\IT'S ME\\eclipse-Welcomeee\\Frame30\\TestData\\config.Properties");
		prop.load(file);
	    return prop.getProperty(value);
	
	}
	
	public void captureScreenshotFailedTC(String methodName) throws Exception
	{
		File abc = ((TakesScreenshot)driver).getScreenshotAs(OutputType.FILE);
		File dest = new File("C:\\Users\\IT'S ME\\eclipse-Welcomeee\\Frame30\\Screenshot/ "+ methodName +" .jpeg");
	    FileHandler.copy(abc,dest);
	}
	

}
 
Login Page --->
package Pages;

import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.support.FindBy;
import org.openqa.selenium.support.PageFactory;

import Base.TestBase;

public class LoginPage extends TestBase {
	
	
	
	@FindBy(xpath = "//input[@id='userid']") private WebElement userIDtxtBox;
	@FindBy(xpath = "//input[@id='password']") private WebElement passwordtxtBox;
	@FindBy(xpath = "//button[@type='submit']") private WebElement loginBtn;
	@FindBy(xpath = "//img[@alt='Kite']") private WebElement kiteLogo;
	@FindBy(xpath = "//img[@alt='Zerodha']") private WebElement zerodhaLogo ;
	
	@FindBy(xpath = "//input[@id='pin']") private WebElement pinTextbox;
	@FindBy(xpath = "//button[@type='submit']") private WebElement continueBtn;
	@FindBy(xpath = "//img[@alt='Kite iOS']") private WebElement appleLogo;
	
	@FindBy(xpath = "//a[text()='Forgot user ID or password?']") private WebElement forgotPassword;
	@FindBy(xpath = "//a[@class='text-light']") private WebElement dontHaveAccText;
    
	//Make Constructor...
	public LoginPage()
	{
		PageFactory.initElements(driver , this);
	}
	
	public void loginZerodhaApp() throws Exception
	{
//		userIDtxtBox.sendKeys("AIC189");
		userIDtxtBox.sendKeys(readPropertyFile("userid"));
		
		passwordtxtBox.sendKeys(readPropertyFile("password"));
		loginBtn.click();
		Thread.sleep(2000);
		pinTextbox.sendKeys(readPropertyFile("pin"));
		continueBtn.click();
		
	}
	
	public String verifyTitle()
	{
		return driver.getTitle();
	}
	
	public boolean verifykiteLogo()
	{
		return kiteLogo.isDisplayed();
	}
	
	
	public boolean verifyzerodhaLogo()
	{
		return zerodhaLogo.isDisplayed();
	}
	
	public String verifyforgotPassword()
	{
		return forgotPassword.getText();
	}
	
	
	public String verifydontHaveAccText()
	{
		return dontHaveAccText.getText();
	}
	
	
	
	
	
	
}
  


TestCases--->
package TestCases;

import static org.testng.Assert.assertEquals;

import org.openqa.selenium.WebDriver;
import org.openqa.selenium.chrome.ChromeDriver;
import org.testng.Assert;
import org.testng.ITestResult;
import org.testng.annotations.AfterMethod;
import org.testng.annotations.BeforeMethod;
import org.testng.annotations.Test;



import Base.TestBase;
import Pages.LoginPage;
import io.github.bonigarcia.wdm.WebDriverManager;

public class LoginPageTest extends TestBase {
	
	LoginPage login ;
	

	@BeforeMethod 
	public void StartsetUp() throws Exception
	{
	      initalization();
	      login = new LoginPage();
	}
	 
	
	@Test 
	public void verifyforgotPasswordTest()
	{
		String forgotPassword = login.verifyforgotPassword();
		System.out.println(forgotPassword);
	
	}



    @Test 
    public void verifyTitleTest()
    {
    	String expTitle = "Kite - Zerodha's fast and elegant flagship trading platform";
    	String actTitle = login.verifyTitle();
    	System.out.println(actTitle);
    	Assert.assertEquals(actTitle, expTitle,"My Title is right..??");
    	System.out.println("Check , Is there printing");
    }


    @Test
    public void verifyloginZerodhaAppTest() throws Exception
    {
    	login.loginZerodhaApp();
    }


    
    @Test  
    public void verifyzerodhaLogoTest()
    {
        boolean result = login.verifyzerodhaLogo();
        Assert.assertEquals(result, true);
    }


    
    
    @Test  
    public void verifykiteLogoTest()
    {
    	boolean result = login.verifykiteLogo();
//    	Assert.assertEquals(result, true);
//    	Assert.assertTrue(false);
    	Assert.assertFalse(false);
    }
    
    
    @Test  
    public void verifydontHaveAccTextTest()
    {
    	String dont = login.verifydontHaveAccText();
    	System.out.println(dont);
    }
    
    
    @AfterMethod
    public void endSetUp(ITestResult z) throws Exception 
    
    {
    	if(ITestResult.FAILURE==z.getStatus())
    	{
    		captureScreenshotFailedTC(z.getName());
    	}
    	driver.quit();
    }
    
    
 
}
	
	
ListnerClass--->

package Listners;

import org.openqa.selenium.WebDriver;
import org.openqa.selenium.chrome.ChromeDriver;
import org.testng.Assert;
import org.testng.annotations.Listeners;
import org.testng.annotations.Test;

import io.github.bonigarcia.wdm.WebDriverManager;

@Listeners(ListnerDemo.class)
public class ListnersClass {

	@Test
	public void testOne()
	{
		WebDriverManager.chromedriver().setup();
		WebDriver driver = new ChromeDriver();
		driver.manage().window().maximize();
		driver.get("http://tutorialsninja.com/demo/");
		
		Assert.assertEquals(driver.getTitle(), "1Your Store");
	}
	
	
	
	
	
	
	
}

